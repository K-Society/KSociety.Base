// Copyright © K-Society and contributors. All rights reserved. Licensed under the K-Society License. See LICENSE.TXT file in the project root for full license information.

namespace KSociety.Base.InfraSub.Shared.Class.LookupTable.Ascii
{
    using System;
    using System.Collections.Generic;

    public static class AsciiTable
    {
        private static readonly Dictionary<byte, AsciiCodes> AsciiMap = new Dictionary<byte, AsciiCodes>
        {
            {0x00, new AsciiCodes(0x00, "NUL", "Null char")},
            {0x01, new AsciiCodes(0x01, "SOH", "Start of Heading")},
            {0x02, new AsciiCodes(0x02, "STX", "Start of Text")},
            {0x03, new AsciiCodes(0x03, "ETX", "End of Text")},
            {0x04, new AsciiCodes(0x04, "EOT", "End of Transmission")},
            {0x05, new AsciiCodes(0x05, "ENQ", "Enquiry")},
            {0x06, new AsciiCodes(0x06, "ACK", "Acknowledgment")},
            {0x07, new AsciiCodes(0x07, "BEL", "Bell")},
            {0x08, new AsciiCodes(0x08, "BS", "Back Space")},
            {0x09, new AsciiCodes(0x09, "HT", "Horizontal Tab")},
            {0x0A, new AsciiCodes(0x0A, "LF", "Line Feed")},
            {0x0B, new AsciiCodes(0x0B, "VT", "Vertical Tab")},
            {0x0C, new AsciiCodes(0x0C, "FF", "Form Feed")},
            {0x0D, new AsciiCodes(0x0D, "CR", "Carriage Return")},
            {0x0E, new AsciiCodes(0x0E, "SO", "Shift Out / X-On")},
            {0x0F, new AsciiCodes(0x0F, "SI", "Shift In / X-Off")},
            {0x10, new AsciiCodes(0x10, "DLE", "Data Line Escape")},
            {0x11, new AsciiCodes(0x11, "DC1", "Device Control 1 (oft. XON)")},
            {0x12, new AsciiCodes(0x12, "DC2", "Device Control 2")},
            {0x13, new AsciiCodes(0x13, "DC3", "Device Control 3 (oft. XOFF)")},
            {0x14, new AsciiCodes(0x14, "DC4", "Device Control 4")},
            {0x15, new AsciiCodes(0x15, "NAK", "Negative Acknowledgement")},
            {0x16, new AsciiCodes(0x16, "SYN", "Synchronous Idle")},
            {0x17, new AsciiCodes(0x17, "ETB", "End of Transmit Block")},
            {0x18, new AsciiCodes(0x18, "CAN", "Cancel")},
            {0x19, new AsciiCodes(0x19, "EM", "End of Medium")},
            {0x1A, new AsciiCodes(0x1A, "SUB", "Substitute")},
            {0x1B, new AsciiCodes(0x1B, "ESC", "Escape")},
            {0x1C, new AsciiCodes(0x1C, "FS", "File Separator")},
            {0x1D, new AsciiCodes(0x1D, "GS", "Group Separator")},
            {0x1E, new AsciiCodes(0x1E, "RS", "Record Separator")},
            {0x1F, new AsciiCodes(0x1F, "US", "Unit Separator")},
            {0x20, new AsciiCodes(0x20, " ", "Space")},
            {0x21, new AsciiCodes(0x21, "!", "Exclamation mark")},
            {0x22, new AsciiCodes(0x22, "\"", "Double quotes")},
            {0x23, new AsciiCodes(0x23, "#", "Number")},
            {0x24, new AsciiCodes(0x24, "$", "Dollar")},
            {0x25, new AsciiCodes(0x25, "%", "Procenttecken")},
            {0x26, new AsciiCodes(0x26, "&", "Ampersand")},
            {0x27, new AsciiCodes(0x27, "'", "Single quote")},
            {0x28, new AsciiCodes(0x28, "(", "Open parenthesis")},
            {0x29, new AsciiCodes(0x29, ")", "Close parenthesis")},
            {0x2A, new AsciiCodes(0x2A, "*", "Asterisk")},
            {0x2B, new AsciiCodes(0x2B, "+", "Plus")},
            {0x2C, new AsciiCodes(0x2C, ",", "Comma")},
            {0x2D, new AsciiCodes(0x2D, "-", "Hyphen")},
            {0x2E, new AsciiCodes(0x2E, ".", "Period, dot or full stop")},
            {0x2F, new AsciiCodes(0x2F, "/", "Slash or divide")},
            {0x30, new AsciiCodes(0x30, "0", "Zero")},
            {0x31, new AsciiCodes(0x31, "1", "One")},
            {0x32, new AsciiCodes(0x32, "2", "Two")},
            {0x33, new AsciiCodes(0x33, "3", "Three")},
            {0x34, new AsciiCodes(0x34, "4", "Four")},
            {0x35, new AsciiCodes(0x35, "5", "Five")},
            {0x36, new AsciiCodes(0x36, "6", "Six")},
            {0x37, new AsciiCodes(0x37, "7", "Seven")},
            {0x38, new AsciiCodes(0x38, "8", "Eight")},
            {0x39, new AsciiCodes(0x39, "9", "Nine")},
            {0x3A, new AsciiCodes(0x3A, ":", "Colon")},
            {0x3B, new AsciiCodes(0x3B, ";", "Semicolon")},
            {0x3C, new AsciiCodes(0x3C, "<", "Less than")},
            {0x3D, new AsciiCodes(0x3D, "=", "Equals")},
            {0x3E, new AsciiCodes(0x3E, ">", "Greater than")},
            {0x3F, new AsciiCodes(0x3F, "?", "Question mark")},
            {0x40, new AsciiCodes(0x40, "@", "At symbol")},
            {0x41, new AsciiCodes(0x41, "A", "Uppercase A")},
            {0x42, new AsciiCodes(0x42, "B", "Uppercase B")},
            {0x43, new AsciiCodes(0x43, "C", "Uppercase C")},
            {0x44, new AsciiCodes(0x44, "D", "Uppercase D")},
            {0x45, new AsciiCodes(0x45, "E", "Uppercase E")},
            {0x46, new AsciiCodes(0x46, "F", "Uppercase F")},
            {0x47, new AsciiCodes(0x47, "G", "Uppercase G")},
            {0x48, new AsciiCodes(0x48, "H", "Uppercase H")},
            {0x49, new AsciiCodes(0x49, "I", "Uppercase I")},
            {0x4A, new AsciiCodes(0x4A, "J", "Uppercase J")},
            {0x4B, new AsciiCodes(0x4B, "K", "Uppercase K")},
            {0x4C, new AsciiCodes(0x4C, "L", "Uppercase L")},
            {0x4D, new AsciiCodes(0x4D, "M", "Uppercase M")},
            {0x4E, new AsciiCodes(0x4E, "N", "Uppercase N")},
            {0x4F, new AsciiCodes(0x4F, "O", "Uppercase O")},
            {0x50, new AsciiCodes(0x50, "P", "Uppercase P")},
            {0x51, new AsciiCodes(0x51, "Q", "Uppercase Q")},
            {0x52, new AsciiCodes(0x52, "R", "Uppercase R")},
            {0x53, new AsciiCodes(0x53, "S", "Uppercase S")},
            {0x54, new AsciiCodes(0x54, "T", "Uppercase T")},
            {0x55, new AsciiCodes(0x55, "U", "Uppercase U")},
            {0x56, new AsciiCodes(0x56, "V", "Uppercase V")},
            {0x57, new AsciiCodes(0x57, "W", "Uppercase W")},
            {0x58, new AsciiCodes(0x58, "X", "Uppercase X")},
            {0x59, new AsciiCodes(0x59, "Y", "Uppercase Y")},
            {0x5A, new AsciiCodes(0x5A, "Z", "Uppercase Z")},
            {0x5B, new AsciiCodes(0x5B, "[", "Opening bracket")},
            {0x5C, new AsciiCodes(0x5C, "\\", "Backslash")},
            {0x5D, new AsciiCodes(0x5D, "]", "Closing bracket")},
            {0x5E, new AsciiCodes(0x5E, "^", "Caret - circumflex")},
            {0x5F, new AsciiCodes(0x5F, "_", "Underscore")},
            {0x60, new AsciiCodes(0x60, "`", "Grave accent")},
            {0x61, new AsciiCodes(0x61, "a", "Lowercase a")},
            {0x62, new AsciiCodes(0x62, "b", "Lowercase b")},
            {0x63, new AsciiCodes(0x63, "c", "Lowercase c")},
            {0x64, new AsciiCodes(0x64, "d", "Lowercase d")},
            {0x65, new AsciiCodes(0x65, "e", "Lowercase e")},
            {0x66, new AsciiCodes(0x66, "f", "Lowercase f")},
            {0x67, new AsciiCodes(0x67, "g", "Lowercase g")},
            {0x68, new AsciiCodes(0x68, "h", "Lowercase h")},
            {0x69, new AsciiCodes(0x69, "i", "Lowercase i")},
            {0x6A, new AsciiCodes(0x6A, "j", "Lowercase j")},
            {0x6B, new AsciiCodes(0x6B, "k", "Lowercase k")},
            {0x6C, new AsciiCodes(0x6C, "l", "Lowercase l")},
            {0x6D, new AsciiCodes(0x6D, "m", "Lowercase m")},
            {0x6E, new AsciiCodes(0x6E, "n", "Lowercase n")},
            {0x6F, new AsciiCodes(0x6F, "o", "Lowercase o")},
            {0x70, new AsciiCodes(0x70, "p", "Lowercase p")},
            {0x71, new AsciiCodes(0x71, "q", "Lowercase q")},
            {0x72, new AsciiCodes(0x72, "r", "Lowercase r")},
            {0x73, new AsciiCodes(0x73, "s", "Lowercase s")},
            {0x74, new AsciiCodes(0x74, "t", "Lowercase t")},
            {0x75, new AsciiCodes(0x75, "u", "Lowercase u")},
            {0x76, new AsciiCodes(0x76, "v", "Lowercase v")},
            {0x77, new AsciiCodes(0x77, "w", "Lowercase w")},
            {0x78, new AsciiCodes(0x78, "x", "Lowercase x")},
            {0x79, new AsciiCodes(0x79, "y", "Lowercase y")},
            {0x7A, new AsciiCodes(0x7A, "z", "Lowercase z")},
            {0x7B, new AsciiCodes(0x7B, "{", "Opening brace")},
            {0x7C, new AsciiCodes(0x7C, "|", "Vertical bar")},
            {0x7D, new AsciiCodes(0x7D, "}", "Closing brace")},
            {0x7E, new AsciiCodes(0x7E, "~", "Equivalency sign (tilde)")},
            {0x7F, new AsciiCodes(0x7F, "", "Delete")},
            {0x80, new AsciiCodes(0x80, "€", "Euro sign")},
            {0x81, new AsciiCodes(0x81, "na", "Not Applicable")},
            {0x82, new AsciiCodes(0x82, "‚", "Single low-9 quotation mark")},
            {0x83, new AsciiCodes(0x83, "ƒ", "Latin small letter f with hook")},
            {0x84, new AsciiCodes(0x84, "„", "Double low-9 quotation mark")},
            {0x85, new AsciiCodes(0x85, "…", "Horizontal ellipsis")},
            {0x86, new AsciiCodes(0x86, "†", "Dagger")},
            {0x87, new AsciiCodes(0x87, "‡", "Double dagger")},
            {0x88, new AsciiCodes(0x88, "ˆ", "Modifier letter circumflex accent")},
            {0x89, new AsciiCodes(0x89, "‰", "Per mille sign")},
            {0x8A, new AsciiCodes(0x8A, "Š", "Latin capital letter S with caron")},
            {0x8B, new AsciiCodes(0x8B, "‹", "Single left-pointing angle quotation")},
            {0x8C, new AsciiCodes(0x8C, "Œ", "Latin capital ligature OE")},
            {0x8D, new AsciiCodes(0x8D, "na", "Not Applicable")},
            {0x8E, new AsciiCodes(0x8E, "Ž", "Latin capital letter Z with caron")},
            {0x8F, new AsciiCodes(0x8F, "na", "Not Applicable")},
            {0x90, new AsciiCodes(0x90, "na", "Not Applicable")},
            {0x91, new AsciiCodes(0x91, "‘", "Left single quotation mark")},
            {0x92, new AsciiCodes(0x92, "’", "Right single quotation mark")},
            {0x93, new AsciiCodes(0x93, "“", "Left double quotation mark")},
            {0x94, new AsciiCodes(0x94, "”", "Right double quotation mark")},
            {0x95, new AsciiCodes(0x95, "•", "Bullet")},
            {0x96, new AsciiCodes(0x96, "–", "En dash")},
            {0x97, new AsciiCodes(0x97, "—", "Em dash")},
            {0x98, new AsciiCodes(0x98, "˜", "Small tilde")},
            {0x99, new AsciiCodes(0x99, "™", "Trade mark sign")},
            {0x9A, new AsciiCodes(0x9A, "š", "Latin small letter S with caron")},
            {0x9B, new AsciiCodes(0x9B, "›", "Single right-pointing angle quotation mark")},
            {0x9C, new AsciiCodes(0x9C, "œ", "Latin small ligature oe")},
            {0x9D, new AsciiCodes(0x9D, "na", "Not Applicable")},
            {0x9E, new AsciiCodes(0x9E, "ž", "Latin small letter z with caron")},
            {0x9F, new AsciiCodes(0x9F, "Ÿ", "Latin capital letter Y with diaeresis")},
            {0xA0, new AsciiCodes(0xA0, "na", "Not Applicable")},
            {0xA1, new AsciiCodes(0xA1, "¡", "Inverted exclamation mark")},
            {0xA2, new AsciiCodes(0xA2, "¢", "Cent sign")},
            {0xA3, new AsciiCodes(0xA3, "£", "Pound sign")},
            {0xA4, new AsciiCodes(0xA4, "¤", "Currency sign")},
            {0xA5, new AsciiCodes(0xA5, "¥", "Yen sign")},
            {0xA6, new AsciiCodes(0xA6, "¦", "Pipe, Broken vertical bar")},
            {0xA7, new AsciiCodes(0xA7, "§", "Section sign")},
            {0xA8, new AsciiCodes(0xA8, "¨", "Spacing diaeresis - umlaut")},
            {0xA9, new AsciiCodes(0xA9, "©", "Copyright sign")},
            {0xAA, new AsciiCodes(0xAA, "ª", "Feminine ordinal indicator")},
            {0xAB, new AsciiCodes(0xAB, "«", "Left double angle quotes")},
            {0xAC, new AsciiCodes(0xAC, "¬", "Not sign")},
            {0xAD, new AsciiCodes(0xAD, "­SHY", "Soft hyphen")},
            {0xAE, new AsciiCodes(0xAE, "­®", "Registered trade mark sign")},
            {0xAF, new AsciiCodes(0xAF, "­¯", "Spacing macron - overline")},
            {0xB0, new AsciiCodes(0xB0, "­°", "Degree sign")},
            {0xB1, new AsciiCodes(0xB1, "­±", "Plus-or-minus sign")},
            {0xB2, new AsciiCodes(0xB2, "­²", "Superscript two - squared")},
            {0xB3, new AsciiCodes(0xB3, "­³", "Superscript three - cubed")},
            {0xB4, new AsciiCodes(0xB4, "­´", "Acute accent - spacing acute")},
            {0xB5, new AsciiCodes(0xB5, "­µ", "Micro sign")},
            {0xB6, new AsciiCodes(0xB6, "­¶", "Pilcrow sign - paragraph sign")},
            {0xB7, new AsciiCodes(0xB7, "­·", "Middle dot - Georgian comma")},
            {0xB8, new AsciiCodes(0xB8, "­¸", "Spacing cedilla")},
            {0xB9, new AsciiCodes(0xB9, "­¹", "Superscript one")},
            {0xBA, new AsciiCodes(0xBA, "­º", "Masculine ordinal indicator")},
            {0xBB, new AsciiCodes(0xBB, "­»", "Right double angle quotes")},
            {0xBC, new AsciiCodes(0xBC, "­¼", "Fraction one quarter")},
            {0xBD, new AsciiCodes(0xBD, "­½", "Fraction one half")},
            {0xBE, new AsciiCodes(0xBE, "­¾", "Fraction three quarters")},
            {0xBF, new AsciiCodes(0xBF, "­¿", "Inverted question mark")},
            {0xC0, new AsciiCodes(0xC0, "­À", "Latin capital letter A with grave")},
            {0xC1, new AsciiCodes(0xC1, "­Á", "Latin capital letter A with acute")},
            {0xC2, new AsciiCodes(0xC2, "­Â", "Latin capital letter A with circumflex")},
            {0xC3, new AsciiCodes(0xC3, "­Ã", "Latin capital letter A with tilde")},
            {0xC4, new AsciiCodes(0xC4, "­Ä", "Latin capital letter A with diaeresis")},
            {0xC5, new AsciiCodes(0xC5, "­Å", "Latin capital letter A with ring above")},
            {0xC6, new AsciiCodes(0xC6, "­Æ", "Latin capital letter AE")},
            {0xC7, new AsciiCodes(0xC7, "­Ç", "Latin capital letter C with cedilla")},
            {0xC8, new AsciiCodes(0xC8, "­È", "Latin capital letter E with grave")},
            {0xC9, new AsciiCodes(0xC9, "­É", "Latin capital letter E with acute")},
            {0xCA, new AsciiCodes(0xCA, "­Ê", "Latin capital letter E with circumflex")},
            {0xCB, new AsciiCodes(0xCB, "­Ë", "Latin capital letter E with diaeresis")},
            {0xCC, new AsciiCodes(0xCC, "­Ì", "Latin capital letter I with grave")},
            {0xCD, new AsciiCodes(0xCD, "­Í", "Latin capital letter I with acute")},
            {0xCE, new AsciiCodes(0xCE, "­Î", "Latin capital letter I with circumflex")},
            {0xCF, new AsciiCodes(0xCF, "­Ï", "Latin capital letter I with diaeresis")},
            {0xD0, new AsciiCodes(0xD0, "­Ð", "Latin capital letter ETH")},
            {0xD1, new AsciiCodes(0xD1, "­Ñ", "Latin capital letter N with tilde")},
            {0xD2, new AsciiCodes(0xD2, "­Ò", "Latin capital letter O with grave")},
            {0xD3, new AsciiCodes(0xD3, "­Ó", "Latin capital letter O with acute")},
            {0xD4, new AsciiCodes(0xD4, "­Ô", "Latin capital letter O with circumflex")},
            {0xD5, new AsciiCodes(0xD5, "­Õ", "Latin capital letter O with tilde")},
            {0xD6, new AsciiCodes(0xD6, "­Ö", "Latin capital letter O with diaeresis")},
            {0xD7, new AsciiCodes(0xD7, "­×", "Multiplication sign")},
            {0xD8, new AsciiCodes(0xD8, "­Ø", "Latin capital letter O with slash")},
            {0xD9, new AsciiCodes(0xD9, "­Ù", "Latin capital letter U with grave")},
            {0xDA, new AsciiCodes(0xDA, "­Ú", "Latin capital letter U with acute")},
            {0xDB, new AsciiCodes(0xDB, "­Û", "Latin capital letter U with circumflex")},
            {0xDC, new AsciiCodes(0xDC, "­Ü", "Latin capital letter U with diaeresis")},
            {0xDD, new AsciiCodes(0xDD, "­Ý", "Latin capital letter Y with acute")},
            {0xDE, new AsciiCodes(0xDE, "­Þ", "Latin capital letter THORN")},
            {0xDF, new AsciiCodes(0xDF, "­ß", "Latin small letter sharp s - ess-zed")},
            {0xE0, new AsciiCodes(0xE0, "­à", "Latin small letter a with grave")},
            {0xE1, new AsciiCodes(0xE1, "­á", "Latin small letter a with acute")},
            {0xE2, new AsciiCodes(0xE2, "­â", "Latin small letter a with circumflex")},
            {0xE3, new AsciiCodes(0xE3, "­ã", "Latin small letter a with tilde")},
            {0xE4, new AsciiCodes(0xE4, "­ä", "Latin small letter a with diaeresis")},
            {0xE5, new AsciiCodes(0xE5, "­å", "Latin small letter a with ring above")},
            {0xE6, new AsciiCodes(0xE6, "­æ", "Latin small letter ae")},
            {0xE7, new AsciiCodes(0xE7, "­ç", "Latin small letter c with cedilla")},
            {0xE8, new AsciiCodes(0xE8, "­è", "Latin small letter e with grave")},
            {0xE9, new AsciiCodes(0xE9, "­é", "Latin small letter e with acute")},
            {0xEA, new AsciiCodes(0xEA, "­ê", "Latin small letter e with circumflex")},
            {0xEB, new AsciiCodes(0xEB, "­ë", "Latin small letter e with diaeresis")},
            {0xEC, new AsciiCodes(0xEC, "­ì", "Latin small letter i with grave")},
            {0xED, new AsciiCodes(0xED, "­í", "Latin small letter i with acute")},
            {0xEE, new AsciiCodes(0xEE, "­î", "Latin small letter i with circumflex")},
            {0xEF, new AsciiCodes(0xEF, "­ï", "Latin small letter i with diaeresis")},
            {0xF0, new AsciiCodes(0xF0, "­ð", "Latin small letter eth")},
            {0xF1, new AsciiCodes(0xF1, "­ñ", "Latin small letter n with tilde")},
            {0xF2, new AsciiCodes(0xF2, "­ò", "Latin small letter o with grave")},
            {0xF3, new AsciiCodes(0xF3, "­ó", "Latin small letter o with acute")},
            {0xF4, new AsciiCodes(0xF4, "­ô", "Latin small letter o with circumflex")},
            {0xF5, new AsciiCodes(0xF5, "­õ", "Latin small letter o with tilde")},
            {0xF6, new AsciiCodes(0xF6, "­ö", "Latin small letter o with diaeresis")},
            {0xF7, new AsciiCodes(0xF7, "­÷", "Division sign")},
            {0xF8, new AsciiCodes(0xF8, "­ø", "Latin small letter o with slash")},
            {0xF9, new AsciiCodes(0xF9, "­ù", "Latin small letter u with grave")},
            {0xFA, new AsciiCodes(0xFA, "­ú", "Latin small letter u with acute")},
            {0xFB, new AsciiCodes(0xFB, "­û", "Latin small letter u with circumflex")},
            {0xFC, new AsciiCodes(0xFC, "­ü", "Latin small letter u with diaeresis")},
            {0xFD, new AsciiCodes(0xFD, "­ý", "Latin small letter y with acute")},
            {0xFE, new AsciiCodes(0xFE, "­þ", "Latin small letter thorn")},
            {0xFF, new AsciiCodes(0xFF, "­ÿ", "Latin small letter y with diaeresis")}
        };

        public static string? GetSymbol(byte hexByte)
        {
            if (AsciiMap.TryGetValue(hexByte, out var value))
            {
                return value.Symbol;
            }

            return null;
        }

        public static string? GetSymbol(byte[] buffer)
        {
            var output = String.Empty;
            if (buffer.Length > 0)
            {
                var length = buffer.Length;
                var symbolArray = new string?[length];
                const string separator = " ";

                for (var i = 0; i < length; i++)
                {
                    symbolArray[i] = GetSymbol(buffer[i]);
                }

                return String.Join(separator, symbolArray);
            }

            return output;
        }
    }
}
