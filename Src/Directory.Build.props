<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © K-Society and contributors. All rights reserved. Licensed under the K-Society License. See LICENSE.TXT file in the project root for full license information. -->

<Project>
  <PropertyGroup>
	<TargetFrameworks>netstandard2.1</TargetFrameworks>
	
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>

    <ProjectName Condition=" '$(ProjectName)' == '' ">$(MSBuildProjectName)</ProjectName>
    <BaseOutputPath>$([System.IO.Path]::GetFullPath($(MSBuildThisFileDirectory)..\build\$(ProjectName)\))</BaseOutputPath>
    <BaseIntermediateOutputPath>$(BaseOutputPath)obj\</BaseIntermediateOutputPath>
    <OutputPath>$(BaseOutputPath)$(Configuration)\</OutputPath>
	
	<Title>$(AssemblyName)</Title>
	
    <Authors>K-Society Team</Authors>
    <Company>K-Society</Company>
    <Copyright>Copyright © K-Society and contributors 2022. All rights reserved.</Copyright>
	<PackageLicenseExpression>MS-RL</PackageLicenseExpression>
	<Description>K-Society Base is a full stack framework for microservices.</Description>
    <Product>K-Society Base</Product>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
	<PublishRepositoryUrl>true</PublishRepositoryUrl>
    <PackageProjectUrl>https://k-society.github.io/KSociety.Base</PackageProjectUrl>
	<RepositoryUrl>https://github.com/K-Society/KSociety.Base</RepositoryUrl>	
	<PackageReleaseNotes>https:%2F%2Fk-society.github.io%2FKSociety.Base%2F$(ProjectName)%2Fchange-log</PackageReleaseNotes>
	<RepositoryType>git</RepositoryType>
	<EmbedUntrackedSources>true</EmbedUntrackedSources>
	<IncludeSymbols>true</IncludeSymbols>
	<SymbolPackageFormat>snupkg</SymbolPackageFormat>
	<PackageTags>ksociety;k-society;microservices;fullstack;framework</PackageTags>
	
	<GitThisAssembly>false</GitThisAssembly>
    <GitVersionFile>version.txt</GitVersionFile>
    <GitIgnoreTagVersion>true</GitIgnoreTagVersion>
    <GitInfoReportImportance>low</GitInfoReportImportance>
    <GitBaseVersionRegex Condition="'$(GitBaseVersionRegex)' == ''">v?(?&lt;MAJOR&gt;\d+|{[\dA-za-z\-\.]+})\.(?&lt;MINOR&gt;(\d+|{[\dA-za-z\-\.]+}))(?:\-(?&lt;LABEL&gt;[\dA-Za-z\-\.{}]+))?$|^v?(?&lt;MAJOR&gt;\d+|{[\dA-za-z\-\.]+})\.(?&lt;MINOR&gt;(\d+|{[\dA-za-z\-\.]+}))\.(?&lt;PATCH&gt;\d+|{[\dA-za-z\-\.]+})(?:\-(?&lt;LABEL&gt;[\dA-Za-z\-\.{}]+))?$|^(?&lt;LABEL&gt;[\dA-Za-z\-\.{}]+)\-v?(?&lt;MAJOR&gt;\d+|{[\dA-za-z\-\.]+})\.(?&lt;MINOR&gt;\d+|{[\dA-za-z\-\.]+})\.(?&lt;PATCH&gt;\d+|{[\dA-za-z\-\.]+})$</GitBaseVersionRegex>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(APPVEYOR)' == 'True'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>
  
  <ItemGroup>
    <RuntimeHostConfigurationOption Include="System.Globalization.Invariant" Value="true" />
  </ItemGroup>
  
  <!--Target Name="PostBuild" BeforeTargets="PostBuildEvent">
    <Exec Command="echo OutputPath: $(OutputPath)&#xD;&#xA;echo BaseIntermediateOutputPath: $(BaseIntermediateOutputPath)&#xD;&#xA;" />
  </Target-->

  <Import Project="Icon.Build.props" Condition=" '$(MSBuildProjectExtension)'=='.csproj' and Exists('Icon.Build.props') " />
  <Import Project="CSharp.Build.props" Condition=" '$(MSBuildProjectExtension)'=='.csproj' and Exists('CSharp.Build.props') " />
  <Import Project="Readme.Build.props" Condition=" '$(MSBuildProjectExtension)'=='.csproj' and Exists('Readme.Build.props') " />
  <Import Project="Custom.Build.props" Condition=" Exists('Custom.Build.props') " />
</Project>
